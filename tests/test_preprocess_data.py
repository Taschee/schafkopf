import schafkopf.players.data.preprocess_data_trickplay as prep
from schafkopf.game_modes import WENZ, SOLO, PARTNER_MODE
from schafkopf.suits import LEAVES, ACORNS, HEARTS, BELLS
from schafkopf.ranks import SEVEN, EIGHT, NINE, UNTER, OBER, KING, TEN, ACE
import pickle
import pytest


def test_switch_card_suit():
    assert prep.switch_card_suit((ACE, BELLS), ACORNS, HEARTS) == (ACE, BELLS)
    assert prep.switch_card_suit((OBER, ACORNS), ACORNS, HEARTS) == (OBER, ACORNS)
    assert prep.switch_card_suit((EIGHT, ACORNS), ACORNS, HEARTS) == (EIGHT, HEARTS)
    assert prep.switch_card_suit((TEN, HEARTS), ACORNS, HEARTS) == (TEN, ACORNS)
    assert prep.switch_card_suit((UNTER, HEARTS), ACORNS, HEARTS) == (UNTER, HEARTS)


def test_switch_suits_played_cards():
    cards = [((OBER, ACORNS), 1), ((EIGHT, BELLS), 2), ((TEN, ACORNS), 3)]
    assert prep.switch_suits_played_cards(cards, BELLS, ACORNS) == [((OBER, ACORNS), 1), ((EIGHT, ACORNS), 2),
                                                                    ((TEN, BELLS), 3)]


def test_switch_suits_player_hands():
    player_hands = [[(4, 3), (4, 2), (4, 1), (3, 0), (7, 1), (6, 1), (2, 1), (0, 1)],
                    [(4, 0), (5, 1), (0, 3), (7, 2), (2, 2), (1, 2), (7, 0), (2, 0)],
                    [(3, 3), (3, 1), (6, 3), (5, 3), (6, 2), (5, 2), (6, 0), (5, 0)],
                    [(3, 2), (1, 1), (7, 3), (2, 3), (1, 3), (0, 2), (1, 0), (0, 0)]]
    transformed_hands = [[(4, 3), (4, 2), (4, 1), (3, 0), (7, 2), (6, 2), (2, 2), (0, 2)],
                         [(4, 0), (5, 2), (0, 3), (7, 1), (2, 1), (1, 1), (7, 0), (2, 0)],
                         [(3, 3), (3, 1), (6, 3), (5, 3), (6, 1), (5, 1), (6, 0), (5, 0)],
                         [(3, 2), (1, 2), (7, 3), (2, 3), (1, 3), (0, 1), (1, 0), (0, 0)]]
    assert prep.switch_suits_player_hands(player_hands, LEAVES, HEARTS) == transformed_hands


def test_transform_solo():
    data_dic_solo = {'declaring_player': 3,
                     'played_cards': [((0, 3), 0), ((6, 3), 1), ((2, 3), 2), ((7, 0), 3), ((4, 3), 3), ((4, 0), 0),
                                      ((3, 1), 1), ((1, 0), 2), ((4, 1), 3), ((5, 0), 0), ((3, 3), 1), ((3, 2), 2),
                                      ((4, 2), 3), ((1, 2), 0), ((5, 3), 1), ((0, 2), 2), ((3, 0), 3), ((2, 2), 0),
                                      ((6, 1), 1), ((1, 1), 2), ((6, 0), 3), ((2, 1), 0), ((5, 1), 1), ((0, 1), 2),
                                      ((2, 0), 3), ((7, 2), 0), ((5, 2), 1), ((1, 3), 2), ((0, 0), 3), ((7, 1), 0),
                                      ((6, 2), 1), ((7, 3), 2)],
                     'player_hands': [[(4, 0), (5, 0), (0, 3), (7, 2), (2, 2), (1, 2), (7, 1), (2, 1)],
                                      [(3, 3), (3, 1), (6, 3), (5, 3), (6, 2), (5, 2), (6, 1), (5, 1)],
                                      [(3, 2), (1, 0), (7, 3), (2, 3), (1, 3), (0, 2), (1, 1), (0, 1)],
                                      [(4, 3), (4, 2), (4, 1), (3, 0), (7, 0), (6, 0), (2, 0), (0, 0)]],
                     'game_mode': (3, 0)}

    transformed_data = prep.transform_solo(data_dic_solo)

    assert len(transformed_data) == 2
    assert transformed_data['player_hands'] == [[(4, 3), (4, 2), (4, 1), (3, 0), (7, 1), (6, 1), (2, 1), (0, 1)],
                                                [(4, 0), (5, 1), (0, 3), (7, 2), (2, 2), (1, 2), (7, 0), (2, 0)],
                                                [(3, 3), (3, 1), (6, 3), (5, 3), (6, 2), (5, 2), (6, 0), (5, 0)],
                                                [(3, 2), (1, 1), (7, 3), (2, 3), (1, 3), (0, 2), (1, 0), (0, 0)]]
    assert transformed_data['played_cards'] == [((0, 3), 1), ((6, 3), 2), ((2, 3), 3), ((7, 1), 0), ((4, 3), 0),
                                                ((4, 0), 1), ((3, 1), 2), ((1, 1), 3), ((4, 1), 0), ((5, 1), 1),
                                                ((3, 3), 2), ((3, 2), 3), ((4, 2), 0), ((1, 2), 1), ((5, 3), 2),
                                                ((0, 2), 3), ((3, 0), 0), ((2, 2), 1), ((6, 0), 2), ((1, 0), 3),
                                                ((6, 1), 0), ((2, 0), 1), ((5, 0), 2), ((0, 0), 3), ((2, 1), 0),
                                                ((7, 2), 1), ((5, 2), 2), ((1, 3), 3), ((0, 1), 0), ((7, 0), 1),
                                                ((6, 2), 2), ((7, 3), 3)]


def test_transform_wenz():
    data_dic_wenz = {'declaring_player': 1,
                     'played_cards': [((1, 0), 0), ((7, 0), 1), ((4, 0), 2), ((0, 0), 3), ((3, 1), 1), ((4, 3), 2),
                                      ((6, 2), 3), ((3, 3), 0), ((4, 2), 0), ((7, 2), 1), ((0, 2), 2), ((1, 1), 3),
                                      ((3, 2), 1), ((5, 3), 2), ((2, 0), 3), ((3, 0), 0), ((7, 3), 1), ((1, 3), 2),
                                      ((2, 1), 3), ((0, 3), 0), ((7, 1), 1), ((0, 1), 2), ((4, 1), 3), ((6, 1), 0),
                                      ((5, 2), 1), ((6, 0), 2), ((5, 0), 3), ((1, 2), 0), ((2, 2), 1), ((6, 3), 2),
                                      ((5, 1), 3), ((2, 3), 0)],
                     'player_hands': [[(3, 3), (3, 0), (2, 3), (0, 3), (4, 2), (1, 2), (6, 1), (1, 0)],
                                      [(3, 2), (3, 1), (7, 3), (7, 2), (5, 2), (2, 2), (7, 1), (7, 0)],
                                      [(6, 3), (5, 3), (4, 3), (1, 3), (0, 2), (0, 1), (6, 0), (4, 0)],
                                      [(6, 2), (5, 1), (4, 1), (2, 1), (1, 1), (5, 0), (2, 0), (0, 0)]],
                     'game_mode': (2, None)}

    data_transformed = prep.transform_wenz(data_dic_wenz)

    assert data_transformed['player_hands'] == [[(3, 2), (3, 1), (7, 3), (7, 2), (5, 2), (2, 2), (7, 1), (7, 0)],
                                                [(6, 3), (5, 3), (4, 3), (1, 3), (0, 2), (0, 1), (6, 0), (4, 0)],
                                                [(6, 2), (5, 1), (4, 1), (2, 1), (1, 1), (5, 0), (2, 0), (0, 0)],
                                                [(3, 3), (3, 0), (2, 3), (0, 3), (4, 2), (1, 2), (6, 1), (1, 0)]]
    assert data_transformed['played_cards'] == [((1, 0), 3), ((7, 0), 0), ((4, 0), 1), ((0, 0), 2), ((3, 1), 0),
                                                ((4, 3), 1), ((6, 2), 2), ((3, 3), 3), ((4, 2), 3), ((7, 2), 0),
                                                ((0, 2), 1), ((1, 1), 2), ((3, 2), 0), ((5, 3), 1), ((2, 0), 2),
                                                ((3, 0), 3), ((7, 3), 0), ((1, 3), 1), ((2, 1), 2), ((0, 3), 3),
                                                ((7, 1), 0), ((0, 1), 1), ((4, 1), 2), ((6, 1), 3), ((5, 2), 0),
                                                ((6, 0), 1), ((5, 0), 2), ((1, 2), 3), ((2, 2), 0), ((6, 3), 1),
                                                ((5, 1), 2), ((2, 3), 3)]


def test_transform_partner():
    data_dic = {'played_cards': [((5, 2), 0), ((0, 2), 1), ((6, 2), 2), ((7, 2), 3), ((1, 2), 3), ((7, 1), 0),
                                 ((2, 2), 1), ((3, 0), 2), ((4, 3), 2), ((3, 3), 3), ((2, 1), 0), ((0, 1), 1),
                                 ((4, 2), 2), ((5, 0), 3), ((6, 1), 0), ((3, 1), 1), ((0, 3), 2), ((1, 3), 3),
                                 ((5, 3), 0), ((7, 3), 1), ((6, 3), 1), ((2, 3), 2), ((2, 0), 3), ((6, 0), 0),
                                 ((7, 0), 1), ((4, 1), 2), ((0, 0), 3), ((5, 1), 0), ((1, 1), 2), ((1, 0), 3),
                                 ((4, 0), 0), ((3, 2), 1)],
                'game_mode': (1, 2),
                'declaring_player': 2,
                'player_hands': [[(4, 0), (7, 1), (6, 1), (5, 1), (2, 1), (5, 3), (5, 2), (6, 0)],
                                 [(3, 2), (3, 1), (0, 1), (7, 3), (6, 3), (2, 2), (0, 2), (7, 0)],
                                 [(4, 3), (4, 2), (4, 1), (3, 0), (1, 1), (2, 3), (0, 3), (6, 2)],
                                 [(3, 3), (1, 3), (7, 2), (1, 2), (5, 0), (2, 0), (1, 0), (0, 0)]]}

    transformed_data = prep.transform_partner(data_dic)

    assert transformed_data['player_hands'] == [[(4, 3), (4, 2), (4, 1), (3, 0), (1, 1), (2, 2), (0, 2), (6, 3)],
                                                [(3, 3), (1, 2), (7, 3), (1, 3), (5, 0), (2, 0), (1, 0), (0, 0)],
                                                [(4, 0), (7, 1), (6, 1), (5, 1), (2, 1), (5, 2), (5, 3), (6, 0)],
                                                [(3, 2), (3, 1), (0, 1), (7, 2), (6, 2), (2, 3), (0, 3), (7, 0)]]
    assert transformed_data['played_cards'] == [((5, 3), 2), ((0, 3), 3), ((6, 3), 0), ((7, 3), 1), ((1, 3), 1),
                                                ((7, 1), 2), ((2, 3), 3), ((3, 0), 0), ((4, 3), 0), ((3, 3), 1),
                                                ((2, 1), 2), ((0, 1), 3), ((4, 2), 0), ((5, 0), 1), ((6, 1), 2),
                                                ((3, 1), 3), ((0, 2), 0), ((1, 2), 1), ((5, 2), 2), ((7, 2), 3),
                                                ((6, 2), 3), ((2, 2), 0), ((2, 0), 1), ((6, 0), 2), ((7, 0), 3),
                                                ((4, 1), 0), ((0, 0), 1), ((5, 1), 2), ((1, 1), 0), ((1, 0), 1),
                                                ((4, 0), 2), ((3, 2), 3)]
